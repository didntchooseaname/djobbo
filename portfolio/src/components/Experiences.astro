---
import SectionTitle from "../components/SectionTitle.astro"
import { HiBriefcase, HiLink } from "react-icons/hi2/index.js"
import Card from "./Card.astro"
import Avatar from "./Avatar.astro"
import ExperienceTags from "./ExperienceTags.astro"
import { i18n } from "../i18n"

const t = i18n(Astro)

type Experience = {
    company: string
    link?: { title: string; href: string }
    title: string
    logo: string
    tags: string[]
    date: string
    stack?: string[]
    logoClassName?: string
}

const experiences: Experience[] = [
    {
        company: "Klaxoon",
        link: { title: "klaxoon.com", href: "https://klaxoon.com" },
        title: t("Frontend Engineer"),
        logo: "Klaxoon.png",
        tags: [t("Fulltime")],
        date: `Jan 2022 - ${t("Present")}`,
        stack: ["React", "TypeScript", "Node.js", "Jest"],
    },
    {
        company: "Corehalla",
        link: { title: "corehalla.com", href: "https://corehalla.com" },
        title: `${t("Fullstack Engineer")} - ${t("UI Designer")}`,
        logo: "Corehalla.png",
        tags: ["Open Source", t("Personal Project")],
        date: `2018 - ${t("Present")}`,
        stack: ["React", "NextJS", "Tailwind", "Supabase"],
    },
    {
        company: "BuckoGraphics",
        link: { title: "bucko.graphics", href: "https://bucko.graphics" },
        title: t("Logomark Designer"),
        logo: "BuckoGraphics.png",
        tags: [t("Personal Project")],
        date: `2020 - ${t("Present")}`,
        stack: ["Figma", "Illustrator", "Photoshop"],
        logoClassName: "bg-light-bg",
    },
    {
        company: "Ludopod",
        title: t("Hobbyist Game Developer"),
        logo: "Ludopod.png",
        tags: [t("Personal Project")],
        date: "2016 - 2018",
        stack: ["Unity", "C#", "Cinema 4D", "Photoshop"],
        logoClassName: "bg-light-bg",
    },
    {
        company: "ÉtoileAlençonnaise",
        title: t("Men's Artistic Gymnastics Coach"),
        logo: "EtoileAlencon.png",
        tags: [t("Volontary Work")],
        date: "2012 - 2016",
    },
]
---

<SectionTitle
    title={t("Experience & Education")}
    Icon={HiBriefcase}
    className="mt-12 mb-4"
/>
<Card paddingClassName="p-0" shadowOutline>
    {
        experiences.map(
            (
                {
                    company,
                    title,
                    logo,
                    tags,
                    date,
                    stack,
                    link,
                    logoClassName,
                },
                i,
            ) => (
                <div
                    class:list={[
                        "relative flex flex-col sm:flex-row sm:items-center sm:justify-between p-4",
                        {
                            "border-t border-outline": i !== 0,
                        },
                    ]}
                >
                    {link && (
                        <a
                            href={link.href}
                            target="_blank"
                            class="absolute top-0 right-0 p-4 text-text1 block sm:hidden"
                        >
                            <HiLink className="w-4 h-4" />
                        </a>
                    )}
                    <div>
                        <div class="flex items-center gap-2 mb-1">
                            <Avatar
                                src={`companies/${logo}`}
                                alt="company"
                                className={logoClassName}
                            />
                            <div>
                                <p class="before:content-['@'] before:text-text1 font-semibold text-lg flex items-center">
                                    {company}
                                    <ExperienceTags
                                        tags={tags}
                                        className="pl-2"
                                        displayClassName="hidden sm:flex"
                                    />
                                </p>
                                <p class="text-text1 text-sm">{title}</p>
                            </div>
                        </div>
                        {!!stack && (
                            <ul class="flex items-center mt-1 sm:mt-2 -ml-2">
                                {stack.map((tech, i) => (
                                    <>
                                        {i !== 0 && (
                                            <div class="bg-primary w-0.5 h-0.5 rotate-45" />
                                        )}
                                        <span class="flex items-center px-2 text-xs font-semibold text-text1 rounded-full">
                                            {tech}
                                        </span>
                                    </>
                                ))}
                            </ul>
                        )}
                    </div>
                    <div class="mt-1 sm:mt-0 text-xs text-text1 text-end flex flex-col whitespace-nowrap items-start sm:items-end">
                        <span>{date}</span>
                        {link && (
                            <a
                                class="hidden sm:flex gap-1 items-center justify-end hover:text-text mt-0.5"
                                href={link.href}
                                target="_blank"
                            >
                                {link.title}
                                <HiLink className="w-3 h-3" />
                            </a>
                        )}
                    </div>
                    <ExperienceTags
                        tags={tags}
                        className="mt-2"
                        displayClassName="flex sm:hidden"
                    />
                </div>
            ),
        )
    }
</Card>
